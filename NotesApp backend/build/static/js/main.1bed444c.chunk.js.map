{"version":3,"sources":["components/Note.js","components/Notification.js","services/notes.js","components/Footer.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","className","content","onClick","Notification","message","baseUrl","noteService","getAll","axios","get","then","response","data","create","newObject","post","update","id","put","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","initialNotes","notesToShow","filter","map","find","n","changedNote","returnedNote","catch","error","setTimeout","toggleImportanceOf","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","type","ReactDOM","render","document","getElementById"],"mappings":"8LAceA,EAZF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACZC,EAAQF,EAAKG,UACb,qBAAuB,iBAE7B,OACI,qBAAIC,UAAU,OAAd,UACKJ,EAAKK,QADV,SAEI,wBAAQC,QAASL,EAAjB,SAAoCC,QCKjCK,EAZM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACpB,OAAgB,OAAZA,EACO,KAIP,qBAAKJ,UAAU,QAAf,SACKI,K,gBCRPC,EAAU,YAmBDC,EAFK,CAAEC,OAfP,WAEX,OADgBC,IAAMC,IAAIJ,GACXK,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAafC,OAVf,SAAAC,GAEX,OADgBN,IAAMO,KAAKV,EAASS,GACrBJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,SAQPI,OALvB,SAACC,EAAIH,GAEhB,OADgBN,IAAMU,IAAN,UAAab,EAAb,YAAwBY,GAAMH,GAC/BJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UCC9BO,EAdA,WAMX,OACI,sBAAKC,MANW,CAChBC,MAAO,QACPC,UAAW,SACXC,SAAU,IAGV,UACI,uBACA,2GC4EGC,EAhFH,WACV,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,IAAvC,mBAAOG,EAAP,KAAgBC,EAAhB,KACA,EAA8BJ,oBAAS,GAAvC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAAwCN,mBAAS,MAAjD,mBAAOO,EAAP,KAAqBC,EAArB,KAEAC,qBAAU,WACR5B,EACGC,SACAG,MAAK,SAAAyB,GACJR,EAASQ,QAEZ,IAEH,IAwCMC,EACJN,EAAUJ,EAAQA,EAAMW,QAAO,SAAAzC,GAAI,OAAIA,EAAKG,aAE9C,OACA,gCACI,uCACA,cAAC,EAAD,CAAcK,QAAS4B,IACzB,8BACE,yBAAQ9B,QAAS,kBAAM6B,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACKM,EAAYE,KAAI,SAAA1C,GAAI,OACnB,cAAC,EAAD,CAAoBA,KAAMA,EAAMC,iBAAkB,kBAtD/B,SAACoB,GAC1B,IAAMrB,EAAO8B,EAAMa,MAAK,SAAAC,GAAC,OAAIA,EAAEvB,KAAOA,KAChCwB,EAAW,2BAAQ7C,GAAR,IAAcG,WAAYH,EAAKG,YAEhDO,EACGU,OAAOC,EAAIwB,GACX/B,MAAK,SAAAgC,GACJf,EAASD,EAAMY,KAAI,SAAA1C,GAAI,OAAIA,EAAKqB,KAAOA,EAAKrB,EAAO8C,SAEpDC,OAAM,SAAAC,GACLX,EAAgB,SAAD,OACJrC,EAAKK,QADD,sCAGf4C,YAAW,WACTZ,EAAgB,QACf,KACHN,EAASD,EAAMW,QAAO,SAAAG,GAAC,OAAIA,EAAEvB,KAAOA,SAsCsB6B,CAAmBlD,EAAKqB,MAArErB,EAAKqB,SAGtB,uBAAM8B,SArCQ,SAACC,GACfA,EAAMC,iBACN,IAAMC,EAAa,CACjBjD,QAAS2B,EACTuB,MAAM,IAAIC,MAAOC,cACjBtD,UAAWuD,KAAKC,SAAW,IAG7BjD,EACGO,OAAOqC,GACPxC,MAAK,SAAAgC,GACJf,EAASD,EAAM8B,OAAOd,IACtBb,EAAW,QAyBf,UACE,uBAAO4B,MAAO7B,EAAS8B,SAtBF,SAACV,GACxBnB,EAAWmB,EAAMW,OAAOF,UAsBtB,wBAAQG,KAAK,SAAb,qBAEA,cAAC,EAAD,Q,MC9ENC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1bed444c.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Note = ({ note, toggleImportance }) => {\r\n    const label = note.important\r\n        ? 'make not important' : 'make important'\r\n    \r\n    return (\r\n        <li className='note'>\r\n            {note.content}&ensp;\r\n            <button onClick={toggleImportance}>{label}</button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default Note","import React from \"react\";\r\n\r\nconst Notification = ({ message }) => {\r\n    if (message === null) {\r\n        return null\r\n    }\r\n\r\n    return (\r\n        <div className=\"error\">\r\n            {message}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notification","import axios from 'axios'\r\nconst baseUrl = 'api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst noteService = { getAll, create, update }\r\n\r\nexport default noteService","import React from 'react'\r\n\r\nconst Footer = () => {\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Footer","import React, { useState, useEffect } from 'react'\r\nimport Note from './components/Note'\r\nimport Notification from './components/Notification'\r\nimport noteService from './services/notes'\r\nimport Footer from './components/Footer'\r\n\r\n\r\nconst App = () => {\r\n  const [notes, setNotes] = useState([])\r\n  const [newNote, setNewNote] = useState('')\r\n  const [showAll, setShowAll] = useState(true)\r\n  const [errorMessage, setErrorMessage] = useState(null)\r\n\r\n  useEffect(() => {\r\n    noteService\r\n      .getAll()\r\n      .then(initialNotes => {\r\n        setNotes(initialNotes)\r\n      })\r\n  }, [])\r\n\r\n  const toggleImportanceOf = (id) => {\r\n    const note = notes.find(n => n.id === id)\r\n    const changedNote = { ...note, important: !note.important }\r\n\r\n    noteService\r\n      .update(id, changedNote)\r\n      .then(returnedNote => {\r\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\r\n      })\r\n      .catch(error => {\r\n        setErrorMessage(\r\n          `Note '${note.content}' was already removed from server`\r\n        )\r\n        setTimeout(() => {\r\n          setErrorMessage(null)\r\n        }, 5000)\r\n        setNotes(notes.filter(n => n.id !== id))\r\n      })\r\n  }\r\n\r\n  const addNote = (event) => {\r\n    event.preventDefault()\r\n    const noteObject = {\r\n      content: newNote,\r\n      date: new Date().toISOString(),\r\n      important: Math.random() < 0.5,\r\n    }\r\n\r\n    noteService\r\n      .create(noteObject)\r\n      .then(returnedNote => {\r\n        setNotes(notes.concat(returnedNote))\r\n        setNewNote('')\r\n      })\r\n  }\r\n\r\n  const handleNoteChange = (event) => {\r\n    setNewNote(event.target.value)\r\n  }\r\n\r\n  const notesToShow =\r\n    showAll ? notes : notes.filter(note => note.important)\r\n\r\n  return (\r\n  <div>\r\n      <h1>Notes</h1>\r\n      <Notification message={errorMessage} />\r\n    <div>\r\n      <button onClick={() => setShowAll(!showAll)}>\r\n        show {showAll ? 'important' : 'all'}\r\n      </button>\r\n    </div>\r\n    <ul>\r\n        {notesToShow.map(note =>\r\n          <Note key={note.id} note={note} toggleImportance={() => toggleImportanceOf(note.id)}/>\r\n        )}\r\n    </ul>\r\n    <form onSubmit={addNote}>\r\n      <input value={newNote} onChange={handleNoteChange}/>\r\n      <button type=\"submit\">save</button>\r\n      </form>\r\n      <Footer />\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import ReactDOM from 'react-dom'\nimport App from './App.js'\nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}